version: "3.8"

services:
  nginx.cityvizor:
    image: nginx:1.17.8-alpine
    container_name: nginx.cityvizor
    ports:
      - "4200:80"
    volumes:
      - ./nginx/production/:/etc/nginx:ro
    environment:
      NGINX_HOST: cityvizor
      NGINX_PORT: 80

  server.cityvizor:
    image: cityvizor-server
    build:
      context: ./server
      target: prod
    command: -w db.cityvizor:5432 -a -m server
    container_name: server.cityvizor
    environment:
      NODE_ENV: local
    volumes:
      - ./data:/home/node/app/data
    depends_on:
      - db.cityvizor
      - nginx.cityvizor
      - redis.cityvizor
      - minio.cityvizor

  worker.cityvizor:
    image: cityvizor-server
    build:
      context: ./server
      target: prod
    command: -w db.cityvizor:5432 -a -m worker
    container_name: worker.cityvizor
    environment:
      NODE_ENV: local
    volumes:
      - ./data:/home/node/app/data
    depends_on:
      - db.cityvizor
      - minio.cityvizor

  client.cityvizor:
    image: cityvizor-client
    build:
      context: ./client
      target: prod
    container_name: client.cityvizor
    environment:
      NODE_ENV: local
    depends_on:
      - nginx.cityvizor

  landing.cityvizor:
    image: cityvizor-landing-page
    build:
      context: ./landing-page
      target: prod
    container_name: landing.cityvizor
    environment:
      NODE_ENV: local
    depends_on:
      - nginx.cityvizor

  db.cityvizor:
    image: postgres:12.16-alpine3.18
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    container_name: db.cityvizor
    environment:
      POSTGRES_DB: cityvizor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
    volumes:
      - ./database/development_db_data.sql:/docker-entrypoint-initdb.d/development_db_data.sql
    ports:
      - 5432:5432

  redis.cityvizor:
    image: redis:6
    container_name: redis.cityvizor

  minio.cityvizor:
    image: minio/minio
    container_name: minio.cityvizor
    volumes:
      - ./data/minio:/data
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
